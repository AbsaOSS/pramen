<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2022 ABSA Group Limited
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>za.co.absa.pramen</groupId>
    <artifactId>pramen</artifactId>
    <version>1.12.8-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Pramen</name>
    <description>A framework for building resilient data pipelines based on Apache Spark</description>
    <url>https://github.com/AbsaOSS/pramen</url>
    <inceptionYear>2022</inceptionYear>

    <repositories>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </repository>
    </repositories>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>ABSA Group Limited</name>
        <url>https://www.absa.africa</url>
    </organization>

    <developers>
        <developer>
            <id>yruslan</id>
            <name>Ruslan Iushchenko</name>
            <timezone>Europe/Prague</timezone>
            <url>https://github.com/yruslan</url>
        </developer>
        <developer>
            <id>zhukovgreen</id>
            <name>Artem Zhukov</name>
            <timezone>Europe/Prague</timezone>
            <url>https://github.com/zhukovgreen</url>
        </developer>
        <developer>
            <id>jirifilip</id>
            <name>Jiří Filip</name>
            <timezone>Europe/Prague</timezone>
            <url>https://github.com/jirifilip</url>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/AbsaOSS/pramen.hit</connection>
        <developerConnection>scm:git:https://github.com/AbsaOSS/pramen.git</developerConnection>
        <url>https://github.com/AbsaOSS/pramen/tree/master</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>api</module>
        <module>core</module>
        <module>extras</module>
    </modules>

    <properties>
        <!-- Common project properties -->
        <encoding>UTF-8</encoding>
        <timestamp>${maven.build.timestamp}</timestamp>

        <!-- Scala 2.11 and Spark 2.4.8 -->
        <!--        <scala.version>2.11.12</scala.version>-->
        <!--        <scala.compat.version>2.11</scala.compat.version>-->
        <!--        <spark.version>2.4.8</spark.version>-->
        <!--        <hadoop.version>2.6.5</hadoop.version>-->
        <!--        <delta.version>0.6.1</delta.version>-->
        <!--        <abris.version>5.1.1</abris.version>-->

        <!-- Scala 2.12 and Spark and Spark 3.2.2 -->
        <!--        <scala.version>2.12.17</scala.version>-->
        <!--        <scala.compat.version>2.12</scala.compat.version>-->
        <!--        <spark.version>3.2.4</spark.version>-->
        <!--        <hadoop.version>3.2.1</hadoop.version>-->
        <!--        <delta.version>2.0.0</delta.version>-->
        <!--        <abris.version>5.1.1</abris.version>-->

        <scala.version>2.12.20</scala.version>
        <scala.compat.version>2.12</scala.compat.version>
        <spark.version>3.2.4</spark.version>
        <hadoop.version>3.2.1</hadoop.version>
        <delta.version>2.0.0</delta.version>
        <abris.version>5.1.1</abris.version>

        <!-- Scala 2.13 and Spark 3.2.2 -->
        <!--        <scala.version>2.13.10</scala.version>-->
        <!--        <scala.compat.version>2.13</scala.compat.version>-->
        <!--        <spark.version>3.4.1</spark.version>-->
        <!--        <hadoop.version>3.3.1</hadoop.version>-->
        <!--        <delta.version>2.0.0</delta.version>-->
        <!--        <abris.version>6.0.0</abris.version>-->

        <!-- Build and plugins properties -->
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssX</maven.build.timestamp.format>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.scala.version>3.3.2</maven.scala.version>
        <maven.rat.plugin.version>0.16.1</maven.rat.plugin.version>
        <maven.scalatest.version>2.2.0</maven.scalatest.version>
        <maven.scoverage.version>1.3.0</maven.scoverage.version>
        <maven.shade.version>3.5.3</maven.shade.version>
        <maven.sources.version>3.3.1</maven.sources.version>
        <maven.surefire.version>3.5.3</maven.surefire.version>

        <!-- Frameworks and libraries -->
        <jackson.version>2.10.3</jackson.version>
        <scala_logging.version>3.7.2</scala_logging.version>
        <scodec_bits.version>1.1.4</scodec_bits.version>
        <scodec_core.version>1.10.3</scodec_core.version>
        <slf4j.version>1.7.25</slf4j.version>
        <kafka.spark.version>0-10</kafka.spark.version>

        <skip.long.tests>true</skip.long.tests>
    </properties>

    <dependencies>
        <!-- Test -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- Scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <!-- Spark -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql-kafka-${kafka.spark.version}_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql-kafka-${kafka.spark.version}_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- Hadoop -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client-api</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <!-- Avro -->
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>5.3.1</version>
            </dependency>

            <!-- ABRIS -->
            <dependency>
                <groupId>za.co.absa</groupId>
                <artifactId>abris_${scala.compat.version}</artifactId>
                <version>${abris.version}</version>
            </dependency>

            <!-- Kafka clients (https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients/2.5.1) -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>2.5.1</version>
            </dependency>

            <!-- MongoDB driver -->
            <dependency>
                <groupId>org.mongodb.scala</groupId>
                <artifactId>mongo-scala-driver_${scala.compat.version}</artifactId>
                <version>2.7.0</version>
            </dependency>

            <!-- PostgreSQL driver (https://mvnrepository.com/artifact/org.postgresql/postgresql) -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.7.7</version>
            </dependency>

            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>12.8.1.jre8</version>
            </dependency>

            <!-- Oracle JDBC driver -->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc14</artifactId>
                <version>10.2.0.3.0</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.typesafe/config -->
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>1.4.3</version>
            </dependency>

            <!-- https://search.maven.org/artifact/com.sun.mail/javax.mail -->
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>1.6.2</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.hsqldb/hsqldb -->
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>2.7.1</version>
                <classifier>jdk8</classifier>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.typesafe.slick/slick -->
            <dependency>
                <groupId>com.typesafe.slick</groupId>
                <artifactId>slick_${scala.compat.version}</artifactId>
                <version>3.3.3</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.typesafe.slick/slick-hikaricp -->
            <dependency>
                <groupId>com.typesafe.slick</groupId>
                <artifactId>slick-hikaricp_${scala.compat.version}</artifactId>
                <version>3.3.3</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.delta/delta-core -->
            <dependency>
                <groupId>io.delta</groupId>
                <artifactId>delta-core_${scala.compat.version}</artifactId>
                <version>${delta.version}</version>
            </dependency>

            <dependency>
                <groupId>io.delta</groupId>
                <artifactId>delta-storage-s3-dynamodb</artifactId>
                <version>${delta.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-spark-runtime-3.2_${scala.compat.version}</artifactId>
                <version>1.4.3</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-collection-compat_${scala.compat.version}</artifactId>
                <version>2.12.0</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/net.sourceforge.jtds/jtds -->
            <dependency>
                <groupId>net.sourceforge.jtds</groupId>
                <artifactId>jtds</artifactId>
                <version>1.3.1</version>
            </dependency>

            <!-- https://search.maven.org/artifact/com.github.yruslan/channel_scala_2.11 -->
            <dependency>
                <groupId>com.github.yruslan</groupId>
                <artifactId>channel_scala_${scala.compat.version}</artifactId>
                <version>0.1.4</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4s</groupId>
                <artifactId>slf4s-api_${scala.compat.version}</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j13</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- https://github.com/scopt/scopt -->
            <dependency>
                <groupId>com.github.scopt</groupId>
                <artifactId>scopt_${scala.compat.version}</artifactId>
                <version>3.7.1</version>
            </dependency>

            <dependency>
                <groupId>com.lihaoyi</groupId>
                <artifactId>requests_${scala.compat.version}</artifactId>
                <version>0.8.0</version>
            </dependency>

            <!-- Test scope dependencies -->
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.compat.version}</artifactId>
                <version>3.2.14</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.28.2</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/de.flapdoodle.embed/de.flapdoodle.embed.mongo -->
            <dependency>
                <groupId>de.flapdoodle.embed</groupId>
                <artifactId>de.flapdoodle.embed.mongo</artifactId>
                <version>2.2.0</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>

        <plugins>
            <!-- the Maven Scala plugin -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${maven.scala.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-unchecked</arg>
                                <arg>-deprecation</arg>
                            </args>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${maven.scalatest.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                    <!-- increase heap size for scalatest -->
                    <argLine>-Xmx1024m</argLine>
                    <parallel>false</parallel>
                </configuration>
                <executions>
                    <execution>
                        <id>unit-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suffixes>(?&lt;!LongSuite)</suffixes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>long-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suffixes>(?&lt;=LongSuite)</suffixes>
                            <skipTests>${skip.long.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- generate source jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.sources.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>build.timestamp</name>
                            <pattern>yyyy-MM-dd HH:mm:ss Z</pattern>
                            <locale>en_UK</locale>
                            <timeZone>Africa/Johannesburg</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${maven.scoverage.version}</version>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <aggregate>true</aggregate>
                    <excludedPackages>.*examples.*;.*replication.*</excludedPackages>
                    <excludedFiles>.*Example.*;Test.*</excludedFiles>
                    <highlighting>true</highlighting>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <version>${maven.rat.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/*.sbt</exclude>
                        <exclude>**/*.properties</exclude>
                        <exclude>**/*.json</exclude>
                        <exclude>**/*.txt</exclude>
                        <exclude>**/*.md</exclude>
                        <exclude>**/*.iml</exclude>
                        <exclude>**/*.csv</exclude>
                        <exclude>**/*.yml</exclude>
                        <exclude>**/*.interp</exclude>
                        <exclude>**/*.tokens</exclude>
                        <exclude>**/_*</exclude>
                        <exclude>**/dependency-reduced-pom.xml</exclude>
                        <exclude>**/.idea/**</exclude>
                        <exclude>**/target/**</exclude>
                        <exclude>**/org.apache.spark.sql.sources.DataSourceRegister</exclude>
                        <exclude>dependency-reduced-pom.xml</exclude>
                        <exclude>.github/CODEOWNERS</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>enable-long-tests</id>
            <properties>
                <skip.long.tests>false</skip.long.tests>
            </properties>
        </profile>
    </profiles>

</project>
