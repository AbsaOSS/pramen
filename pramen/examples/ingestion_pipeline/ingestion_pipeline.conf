# General options
pramen {
  environment.name = "MyEnv (dev)"
  pipeline.name = "Example ingestion pipeline"

  bookkeeping.enabled = false

  # A temporaty directory on HDFS or S3 depending on Hadoop configuration
  temporary.directory = "/tmp"
}

# Metastore
pramen.metastore {
  tables = [
    {
      # Minimal definition
      name = "table1"
      format = "delta"
      path = "/data/lake/metastore/table1"
    },
    {
      # Extended definition
      name = "table2"
      description = "Test table2"
      format = "parquet"
      path = "/data/lake/metastore/table2"
      records.per.partition = 1000000
      information.date.start = "2022-01-01"
    }
  ]
}

# Sources
pramen.sources = [
  {
    # A source can be refered to by name
    name = "postgre_events"

    # This is a JDBC source, the data is coming from a relational database.
    factory.class = "za.co.absa.pramen.framework.source.JdbcSource"

    # Define the connection string
    jdbc = {
      driver = "org.postgresql.Driver"
      connection.primary.url = "jdbc:postgresql://myserver:5432/my_db1"
      user = "my_user1"
      password = "my_password1"
    }

    # This is an event database that has an information date column
    has.information.date.column = true
    information.date.column = "info_date"
    information.date.type = "date"
    # Date format in Java format notation
    information.date.app.format = "yyyy-MM-dd"
    # Date format in the SQL dialect notation
    information.date.sql.format = "YYYY-MM-DD"
  },
  {
    name = "postgre_snapshot"
    factory.class = "za.co.absa.pramen.framework.source.JdbcSource"

    jdbc = {
      driver = "org.postgresql.Driver"
      connection.primary.url = "jdbc:postgresql://myserver:5432/my_db2"
      user = "my_user2"
      password = "my_password2"
    }

    has.information.date.column = false
  }
]

# Email notification configuration. When 'send.to' is empty no emeils will be generated or sent.
mail {
  smtp.host = "my.smtp.server.com"
  smtp.port = "25"
  smtp.auth = "false"

  send.from = "Pramen <pramen.noreply@example.com>"
  send.to = "email1@example.com, email2@example.com"
}

# The pipeline
pramen.operations = [
  {
    name = "Events sourcing"
    type = "ingestion"
    schedule.type = "daily"

    source = "postgre_events"

    tables = [
      {
        input.db.table = table1
        output.metastore.table = table1
      }
    ]
  },
  {
    name = "Entities sourcing"
    type = "ingestion"
    schedule.type = "daily"

    source = "postgre_entities"

    tables = [
      {
        input.db.table = table2
        output.metastore.table = table2
      }
    ]
  }
]
