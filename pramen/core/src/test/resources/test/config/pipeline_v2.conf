# Copyright 2022 ABSA Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This variable is expected to be set up by the test suite
#base.path = "/tmp"

pramen.metastore {
  tables = [
    {
      name = "table1_sync"
      description = "Table 1 description"
      format = "parquet"
      path = ${base.path}/table1
      records.per.partition = 1000000

      information.date.column = "INFORMATION_DATE"
      information.date.format = "yyyy-MM-dd"
      information.date.expression = "@runDate - 1"
      information.date.start = "2017-01-31"
    },
    {
      name = "table2_sync"
      description = "Table 2 description"
      format = "delta"
      path = ${base.path}/table2
    },
    {
      name = "table_out"
      description = "Output table"
      format = "delta"
      path = ${base.path}/table_out
    }
  ]
}

pramen.notification.targets = [
  {
    name = "custom1"
    factory.class = "za.co.absa.pramen.core.mocks.notify.NotificationTargetSpy"

    my.config1 = "mykey1"
    my.config2 = "mykey2"
  },
]

pramen.pipeline {
  name = "pipeline_v2"
}

pramen.operations = [
  {
    # Mandatory
    name = "op1"
    type = "ingestion" # or "transformation" or "sink"
    schedule.type = "daily"

    source = "myjdbc"

    expected.delay.days = 5

    # Determines information date by the run date
    expected.delay.days = 1
    info.date.expr = "beginOfMonth(@runDate)"
    processing.timestamp.column = "SYNC_TIMESTAMP"

    notification.targets = [ "custom1" ]

    tables = [
      {
        input.db.table = table1_db
        output.metastore.table = table1_sync
        transformations = [
          {col = "A", expr = "cast(A as decimal(15,5))"}
        ],
        filters = [
          "A > 2.0"
        ]
        notification.token = "A1"
      },
      {
        input.sql = "SELECT * FROM table2_db WHERE information_date = date'@infoDate'"
        output.metastore.table = table2_sync
        notification.token = "A2"
      }
    ]
  },
  {
    name = "op2"
    type = "transformation"
    class = "some.class"
    schedule.type = "daily"

    output.table = "table_out"
    track.days = 3

    notification.targets = [ custom1 ]
    notification.token = "A2"

    dependencies = [
      {
        tables = [table1_sync, table2_sync]
        date.from = "@infoDate - 1"
      }
    ]

    transformations = [
      {col = "B", expr = "cast(B as double)"}
    ]

    filters = [
      "B > 2.0"
    ]
  }
]
