# Copyright 2022 ABSA Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This variable is expected to be set up by the test suite
#base.path = "/tmp"

pramen {
  pipeline.name = "Integration test with a file-based source"

  temporary.directory = ${base.path}/temp

  bookkeeping.enabled = false
  stop.spark.session = false
}

pramen.metastore {
  tables = [
    {
      name = "table1"
      format = "parquet"
      path = ${base.path}/table1
    },
    {
      name = "table2"
      format = "transient"
      cache.policy = ${cache.policy}
    },
    {
      name = "table3"
      format = "parquet"
      path = ${base.path}/table3
    },
    {
      name = "table4"
      format = "parquet"
      path = ${base.path}/table4
    },
    {
      name = "table5"
      format = "parquet"
      path = ${base.path}/table5
    }
  ]
}

pramen.operations = [
  {
    name = "Generating dataframe"
    type = "transformation"

    class = "za.co.absa.pramen.core.mocks.transformer.GeneratingTransformer"
    schedule.type = "daily"
    output.table = "table1"
    info.date.expr = "@runDate - 1"
  },
  {
    name = "Identity transformer (lazy)"
    type = "transformation"

    class = "za.co.absa.pramen.core.transformers.IdentityTransformer"
    schedule.type = "weekly"
    schedule.days.of.week = [ 1, 4 ] # Monday, Thursday

    output.table = "table2"

    info.date.expr = "@runDate - 1"

    dependencies = [
      {
        tables = [ table1 ]
        date.from = "@infoDate"
        optional = true # Since no bookkeeping available the table will be seen as empty for the dependency manager
      }
    ]

    option {
      table = "table1"
    }
  },
  {
    name = "Identity transformer (eager)"
    type = "transformation"
    class = "za.co.absa.pramen.core.transformers.IdentityTransformer"
    schedule.type = "daily"

    output.table = "table3"

    info.date.expr = "@runDate - 1"
    dependencies = [
      {
        tables = [ table2 ]
        date.from = "@infoDate"
        optional = true # Since no bookkeeping available the table will be seen as empty for the dependency manager
      }
    ]

    option {
      table = "table2"
    }
  },
  {
    name = "Ranged transformer"
    type = "transformation"

    class = "za.co.absa.pramen.core.mocks.transformer.RangedTransformer"
    schedule.type = "weekly"
    schedule.days.of.week = [ 4 ] # Thursday

    output.table = "table4"

    info.date.expr = "@runDate"

    dependencies = [
      {
        tables = [ table2 ]
        date.from = "@infoDate - 1"
        optional = true # Since no bookkeeping available the table will be seen as empty for the dependency manager
      }
    ]

    option {
      table = "table2"
      use.latest = "false"
    }
  },
  {
    name = "Last snapshot transformer"
    type = "transformation"

    class = "za.co.absa.pramen.core.mocks.transformer.RangedTransformer"
    schedule.type = "weekly"
    schedule.days.of.week = [ 4 ] # Thursday

    output.table = "table5"

    info.date.expr = "@runDate"

    dependencies = [
      {
        tables = [ table2 ]
        date.from = "@infoDate - 1"
        optional = true # Since no bookkeeping available the table will be seen as empty for the dependency manager
      }
    ]

    option {
      table = "table2"
      use.latest = "true"
    }
  }
]
