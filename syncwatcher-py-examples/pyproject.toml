[tool.black]
line-length = 79
target-version = ["py36"]

[tool.isort]
atomic = true
line_length = 79
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
balanced_wrapping = true
include_trailing_comma = true
multi_line_output = 3
known_third_party = [
    "pytest",
    "syncwatcher_py",
]
known_first_party = [
]

[tool.coverage.run]
branch = false
source = ["transformations"]
omit = [
]

[tool.coverage.paths]
source = ["./transformations/"]

[tool.coverage.report]
fail_under = 90
skip_covered = true
show_missing = true

[tool.mypy]
check_untyped_defs = true
# disallow_any_unimported = true
# disallow_any_expr = true
#disallow_any_decorated = true
disallow_any_generics = true
disallow_any_explicit = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
#disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "normal"
follow_imports_for_stubs = true
ignore_missing_imports = false
namespace_packages = true
explicit_package_bases = true
show_column_numbers = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "conftest",
    "migrations.*",
    "tests.*",
    "*.tests"
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "6.0.0"
addopts = "-vv -s --tb=native"
testpaths = "tests/"

[tool.poetry]
name = "syncwatcher-py-examples"
version = "3.1.1"
description = "Examples of transformations for syncwatcher_py"
authors = ["Artem Zhukov <iam@zhukovgreen.pro>"]
maintainers = [
    "Artem Zhukov <iam@zhukovgreen.pro>",
]
readme = "README.md"
repository = "https://github.com/absa-group/syncwatcher-py-examples"
packages = [
    { include = "transformations" },
]
keywords = ["syncwatcher", "pyspark", "transformations", "metastore", "examples"]

[tool.poetry.dependencies]
python = ">=3.6.8,<4.0"
pyspark = "^3.0.3"
loguru = "^0.6.0"
typing-extensions = "^4.1.1"
syncwatcher-py = {version = "^4.0.0", source = "jfrog"}

[tool.poetry.dev-dependencies]
neovim = "^0.3.1"
pdbpp = "^0.10.3"
isort = "^5.10.1"
pytest = "6.2.5"
pytest-asyncio = "0.16"
pytest-cov = "2.12.1"
coverage = { extras = ["toml"], version = "^6.2" }
mypy = "^0.931"
black = "^22.1.0"
pre-commit = "^2.17.0"
types-PyYAML = "^6.0.4"
pyspark-stubs = "^3.0.0"
chispa = "^0.9.2"
pytest-sugar = "^0.9.4"
pytest-mock = "3.6.1"
#syncwatcher-py = {path = "../syncwatcher-py", develop = true}

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"

[[tool.poetry.source]]
name = "jfrog"
url = "https://artifacts.bcp.absa.co.za/artifactory/api/pypi/cto-data-solutions-pypi/simple"
secondary = true
