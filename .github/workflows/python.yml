name: python_ci

on:
  pull_request:
    paths:
      - "pramen-py/**"
      - ".github/workflows/python.yml"
  push:
    branches: [ main ]
    paths:
      - "pramen-py/**"
      - ".github/workflows/python.yml"

defaults:
  run:
    shell: bash
    working-directory: "./pramen-py"

jobs:
  lint:
    strategy:
      matrix:
        python-version: [ "3.10"]
        os-name: [ ubuntu-latest ]
    runs-on: ${{ matrix.os-name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.14
      - name: install dependencies
        run: make --silent install
      - name: lint
        run: make --silent pre-commit
  test:
    strategy:
      matrix:
        python-version: [ "3.6", "3.7", "3.8", "3.9", "3.10"]
        os-name: [ ubuntu-latest ]
    runs-on: ${{ matrix.os-name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.14
      - name: install dependencies
        run: make --silent install
      - name: test
        env:
          ENV: ci
        run: make --silent test
  publish:
    if: "${{ github.event_name == 'push' }}"
    needs: ["lint", "test"]
    environment: release
    runs-on: ubuntu-latest
    container: ubuntu:20.04
    steps:
      - uses: actions/checkout@v3
      - name: import absa oss ci/cd bot key
        run: |
          apt update -y && apt dist-upgrade -y
          apt install -y gnupg wget
          sh -c "echo 'deb https://gitsecret.jfrog.io/artifactory/git-secret-deb git-secret main' >> /etc/apt/sources.list"
          wget -qO - 'https://gitsecret.jfrog.io/artifactory/api/gpg/key/public' | apt-key add -
          apt install -y --no-install-recommends \
            git-secret
          echo "${{ secrets.ABSA_OSS_CI_CD_BOT_GPG_KEY }}" | tr ',' '\n' > ./private_key.gpg
          gpg --batch --yes --pinentry-mode loopback --import private_key.gpg
          rm private_key.gpg
      - name: reveal secrets
        working-directory: "."
        run: |
          git config --global --add safe.directory /__w/pramen/pramen
          git init
          git add .
          git secret reveal
      - name: install project dependencies
        run: |
          apt install -y --no-install-recommends \
            libssl-dev \
            make
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: abatilo/actions-poetry@v2.1.5
        with:
          poetry-version: 1.1.14
      - name: build and publish the wheel to jfrog
        env:
          ENV: pypi
        run: make --silent publish
